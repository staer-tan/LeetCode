题目：给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
方法：①暴力法：在数组中一个个扫描求和（优：简单，缺：费时间）
②两遍Hash表法：先将数组数据放入hash表，再求每个元素值是否在hash表中。
（优：省时间，缺：费空间）
注意事项：
完整代码：
int[ ] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < nums.length; i++)
            map.put(nums[i], i); //将数据放入至hash表中
        
        for(int i = 0; i < nums.length; i++){
            int complement = target - nums[i];
            if(map.containsKey(complement) && map.get(complement) != i)
                return new int[] {i,map.get(complement)};
        }
        throw new IllegalArgumentException("No two sum solution");
    }
